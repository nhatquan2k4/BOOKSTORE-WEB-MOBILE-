// Trang chi ti·∫øt s√°ch
"use client";

import Image from "next/image";
import Link from "next/link";
import { useState, use } from "react";

type Params = { id: string };

export default function BookDetailPage({ params }: { params: Promise<Params> }) {
  // L·∫•y id t·ª´ route (client component d√πng experimental hook use())
  const { id } = use(params);

  const [activeTab, setActiveTab] = useState<"desc" | "review">("desc");
  const [descExpanded, setDescExpanded] = useState(false);

  // mock data (sau n√†y b·∫°n fetch t·ª´ API d·ª±a tr√™n id)
  const book = {
    id,
    title: "101 c√°ch v∆∞·ª£t qua d·ªói h·ªùn h√†ng x√≥m",
    author: "ƒê·ªìng Vu",
    publisher: "NXB Tr·∫ª",
    price: 100000,
    stock: 12,
    language: "Ti·∫øng Vi·ªát",
    cover: "/image/anh.png",
    description: `T·ªëng Thi√™n Th·ªã lu√¥n c·∫£m th·∫•y h√†ng x√≥m m·ªõi t·ªõi l√† ng∆∞·ªùi kh√¥ng d·ªÖ s·ªëng chung, b·ªüi h·∫Øn kh√¥ng ch·ªâ l·∫°nh l√πng m√† l·ªùi n√≥i ra c≈©ng ch·∫≥ng d·ªÖ l·ªçt tai. M√£i cho ƒë·∫øn m·ªôt ng√†y c√¥ b·ªã h√†ng x√≥m ch·∫∑n tr√™n h√†nh lang.

ƒê√¥i m·∫Øt c·ªßa lu·∫≠t s∆∞ √în s√°ng qu·∫Øc: "TrƒÉm nh√¢n ·∫Øt c√≥ qu·∫£, t√¥i ch√≠nh l√† qu·∫£ c·ªßa em."

T·ªëng Thi√™n Th·ªã nh√¨n ng∆∞·ªùi ƒë√†n √¥ng ƒÉn m·∫∑c ch·ªânh t·ªÅ tr∆∞·ªõc m·∫∑t, ƒë·ªôt nhi√™n thay ƒë·ªïi quan ƒëi·ªÉm v·ªÅ anh.

...

C√¥ cho r·∫±ng c√¥ c√≥ th·ªÉ y√™u ƒë∆∞∆°ng v·ªõi lu·∫≠t s∆∞ nh∆∞ng k·∫øt h√¥n th√¨ kh√¥ng th·ªÉ, b·ªüi v·ªÅ sau c√£i nhau th√¨ ch·∫Øc ch·∫Øn c√¥ kh√¥ng th·ªÉ th·∫Øng h·∫Øn, h∆°n n·ªØa, c√≥ khi l√∫c ly h√¥n ƒë·ªëi ph∆∞∆°ng kh√¥ng c·∫ßn thu√™ lu·∫≠t s∆∞ c≈©ng c√≥ th·ªÉ ti·ªÖn c√¥ ra kh·ªèi nh√† ngay l·∫≠p t·ª©c.

Nghe xong l√Ω do c√¥ c·ª± tuy·ªát, lu·∫≠t s∆∞ √în b√¨nh th·∫£n: "N·∫øu em kh√¥ng th√≠ch th√¢n ph·∫≠n lu·∫≠t s∆∞ th√¨ t√¥i c√≥ th·ªÉ ƒë·ªïi th√†nh th√¢n ph·∫≠n ch·ªìng em."`,
  };

  const relatedBooks = [
    { id: "r1", title: "T√¥i th·∫•y hoa v√†ng tr√™n c·ªè xanh", cover: "/image/anh.png" },
    { id: "r2", title: "Th√°ng nƒÉm r·ª±c r·ª°", cover: "/image/anh.png" },
    { id: "r3", title: "Ng∆∞·ªùi l√°i ƒë√≤ s√¥ng ƒê√†", cover: "/image/anh.png" },
  ];

  const formatCurrency = (amount: number) =>
    new Intl.NumberFormat("vi-VN", { style: "currency", currency: "VND" }).format(amount);

  // C·∫•u h√¨nh r√∫t g·ªçn m√¥ t·∫£ (ƒë·ªïi con s·ªë n·∫øu mu·ªën)
  const DESC_LIMIT = 300;
  const isLongDesc = book.description.length > DESC_LIMIT;
  const shortDesc = isLongDesc ? book.description.substring(0, DESC_LIMIT) + "..." : book.description;

  return (
    <div className="container mx-auto px-6 py-10 text-slate-800 dark:text-slate-100">
      {/* Breadcrumb */}
      <nav className="mb-4 text-sm text-slate-500">
        <Link href="/" className="hover:text-blue-600">
          Trang ch·ªß
        </Link>{" "}
        /{" "}
        <Link href="/books" className="hover:text-blue-600">
          S√°ch
        </Link>{" "}
        / <span className="font-medium text-slate-700">{book.title}</span>
      </nav>

      {/* N·ªôi dung ch√≠nh */}
      <div className="grid grid-cols-1 gap-8 rounded-2xl bg-white p-6 shadow-sm dark:bg-slate-900 lg:grid-cols-2">
        <div className="flex justify-center">
          <Image
            src={book.cover}
            alt={book.title}
            width={400}
            height={600}
            className="rounded-xl object-cover"
          />
        </div>

        <div className="space-y-4">
          <h1 className="text-3xl font-semibold">{book.title}</h1>
          <p className="text-sm text-slate-500">T√°c gi·∫£: {book.author}</p>
          <p className="text-sm text-slate-500">Nh√† xu·∫•t b·∫£n: {book.publisher}</p>

          <div className="flex items-center gap-4">
            <p className="text-2xl font-bold text-red-600">{formatCurrency(book.price)}</p>
            <p className="font-medium text-green-600">{book.stock > 0 ? "C√≤n h√†ng" : "H·∫øt h√†ng"}</p>
          </div>

          <div className="mt-4 flex gap-3">
            <button className="rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700">
              Mua ngay
            </button>
            <button className="rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700">
              üõí Th√™m v√†o gi·ªè h√†ng
            </button>
            <button className="rounded-lg bg-amber-500 px-4 py-2 text-white hover:bg-amber-600">
              üìñ Thu√™ e-book
            </button>
            <button className="rounded-lg border border-slate-300 px-4 py-2 hover:bg-slate-50">
              ‚ù§Ô∏è Y√™u th√≠ch
            </button>
          </div>

          {/* Th√¥ng tin chi ti·∫øt */}
          <div className="mt-6">
            <h2 className="mb-2 text-lg font-semibold">Th√¥ng tin chi ti·∫øt</h2>
            <ul className="space-y-1 text-sm">
              <li>
                <strong>Ng√¥n ng·ªØ:</strong> {book.language}
              </li>
              <li>
                <strong>Nh√† xu·∫•t b·∫£n:</strong> {book.publisher}
              </li>
              <li>
                <strong>T√¨nh tr·∫°ng:</strong> {book.stock > 0 ? "C√≤n h√†ng" : "H·∫øt h√†ng"}
              </li>
            </ul>
          </div>
        </div>
      </div>

      {/* Tabs: M√¥ t·∫£ / B√¨nh lu·∫≠n */}
      <div className="mt-10">
        <div className="mb-4 flex border-b">
          <button
            onClick={() => setActiveTab("desc")}
            className={`px-4 py-2 font-medium border-b-2 ${
              activeTab === "desc" ? "border-blue-600 text-blue-600" : "border-transparent"
            }`}
          >
            M√¥ t·∫£ s·∫£n ph·∫©m
          </button>
          <button
            onClick={() => setActiveTab("review")}
            className={`px-4 py-2 font-medium border-b-2 ${
              activeTab === "review" ? "border-blue-600 text-blue-600" : "border-transparent"
            }`}
          >
            ƒê√°nh gi√°
          </button>
        </div>

        {/* M√î T·∫¢ (·∫©n b·ªõt + xem th√™m) */}
        {activeTab === "desc" && (
          <div className="relative rounded-xl bg-white p-6 dark:bg-slate-900">
            <p className="whitespace-pre-line text-sm leading-relaxed">
              {descExpanded ? book.description : shortDesc}
            </p>

            {isLongDesc && (
              <button
                onClick={() => setDescExpanded((v) => !v)}
                className="mt-3 text-sm font-medium text-blue-600 hover:underline"
                aria-expanded={descExpanded}
              >
                {descExpanded ? "Thu g·ªçn" : "Xem th√™m"}
              </button>
            )}
          </div>
        )}

        {/* ƒê√ÅNH GI√Å */}
        {activeTab === "review" && (
          <div className="space-y-3 rounded-xl bg-white p-6 dark:bg-slate-900">
            <div className="rounded-lg border p-3">
              <p className="font-medium">Nguy·ªÖn VƒÉn A</p>
              <p className="text-sm text-slate-500">S√°ch r·∫•t hay v√† √Ω nghƒ©a</p>
            </div>
            <div className="rounded-lg border p-3">
              <p className="font-medium">Tr·∫ßn Th·ªã B</p>
              <p className="text-sm text-slate-500">ƒê√≥ng g√≥i c·∫©n th·∫≠n, giao h√†ng nhanh</p>
            </div>
          </div>
        )}
      </div>

      {/* S√°ch li√™n quan */}
      <div className="mt-10">
        <h2 className="mb-4 text-lg font-semibold">S√°ch li√™n quan</h2>

        <div className="flex gap-4 overflow-x-auto pb-3">
          {relatedBooks.map((b) => (
            <div
              key={b.id}
              className="flex h-[260px] w-[150px] min-w-[150px] flex-col rounded-xl bg-white p-3 transition hover:shadow-md dark:bg-slate-900"
            >
              {/* Khung ·∫£nh c·ªë ƒë·ªãnh */}
              <div className="h-[180px] w-full overflow-hidden rounded-lg">
                <Image
                  src={b.cover}
                  alt={b.title}
                  width={150}
                  height={180}
                  className="h-full w-full object-cover"
                />
              </div>

              {/* Ti√™u ƒë·ªÅ: xu·ªëng d√≤ng t·ªëi ƒëa 2 d√≤ng */}
              <p className="clamp-2 mt-2 text-center text-sm leading-tight">{b.title}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Footer */}
      <footer className="mt-16 text-center text-xs text-slate-400">
        ¬© 2025 BookStore - Mua & Thu√™ S√°ch Tr·ª±c Tuy·∫øn
      </footer>
    </div>
  );
}
